<%!
    /**
     * Helpers are essentially Java classes that can be used in JSP pages.  The 
     * BundleHelper is a core helper (meaning that it rarely, if ever be 
     * modified).  It includes helper methods that simplify very common display 
     * logic within the bundle.
     */
    public static class BundleHelper {
        /**
         * Returns true if there is a "debugjs" parameter was passed with the 
         * HTTP request and the value is set to "true" (case insensitive).  The 
         * purpose of this parameter is to load the complete javascript source 
         * files instead of the minified versions.  This allows for easier 
         * troubleshooting and debugging.  Minified versions are normally used 
         * for faster page loads.
         */
        public static boolean debugJs(javax.servlet.http.HttpServletRequest request) {
            String debugParam = (String)request.getParameter("debugjs");
            boolean debug = false;
            if (debugParam != null) {
                debug = Boolean.valueOf(debugParam).booleanValue();
            }
            return debug;
        }

        /**
         * Returns true if the object is not null, not false, and the
         * object.toString() value contains characters other than whitespace.
         */
        public static boolean isBlank(Object object) {
            boolean isBlank = true;
            if (object != null && object != Boolean.FALSE && object.toString().trim().length() > 0) {
                isBlank = false;
            }
            return isBlank;
        }

        /**
         * Returns a String representation of the current time in milliseconds
         * since Epoch.
         */
        public static String timestamp() {
            return String.valueOf(System.currentTimeMillis());
        }
    }
%>